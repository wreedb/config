#!/usr/bin/env -S guile -s
!#
;; -*- scheme -*- vim:ft=scheme

(use-modules (ice-9 format)
             (ice-9 popen)
             (ice-9 rdelim))

(define (getenv-maybe varname default)
  (or (getenv varname) default))

(define (write-file mode str file)
  (let ((handle (open-file file mode)))
    (display str handle)
    (close-port handle)))

(define (capture command)
  (let* ((in (open-input-pipe command))
         (out (read-string in)))
    (close-pipe in) out))

(define (rm-newlines str)
  (list->string
    (filter
      (lambda (c) (not (char=? c #\newline)))
      (string->list str))))

;; exit if dirmngr is already running
(unless (string-null? (capture "pgrep -x dirmngr"))
  (display "error: dirmngr already running\n")
  (exit 1))

(define gnupghome
  (getenv-maybe "GNUPGHOME"
    (string-append (getenv "HOME") "/.local/share/gnupg")))

(when (string-null? (getenv "XDG_RUNTIME_DIR"))
  (display "XDG_RUNTIME_DIR is not set, exiting.\n")
  (exit 1))

(define runtime-dir (getenv "XDG_RUNTIME_DIR"))

(define socket-dir (string-append runtime-dir "/dirmngr"))
(define cache
  (string-append
    (getenv-maybe "XDG_CACHE_HOME"
      (string-append (getenv "HOME") "/.cache"))
    "/dirmngr"))

(define socket-file (string-append socket-dir "/socket"))
(define pid-file (string-append socket-dir "/pid"))
(define log-file (string-append socket-dir "/log"))

(define pre-cache-file (string-append cache "/pre"))
(define sh-cache-file (string-append cache "/info.sh"))
(define fish-cache-file (string-append cache "/info.fish"))

(unless (file-exists? socket-dir)
  (mkdir socket-dir)
  (chmod socket-dir #o700))

(unless (file-exists? cache)
  (mkdir cache))

(define files-to-delete
  (list pid-file
        pre-cache-file
        sh-cache-file
        fish-cache-file))

;; delete the files that i'm regenerating
(for-each (lambda (file)
  (when (file-exists? file)
    (delete-file file))) files-to-delete)

(define dirmngr-command
  (format #f "dirmngr --daemon --log-file ~a --socket-name ~a --keyserver ~a --sh"
    log-file
    socket-file
    "hkps://keys.openpgp.org"))

(write-file "a" "\n---\n" log-file)

(write-file "w"
  (capture dirmngr-command)
  pre-cache-file)

(write-file "w"
  (capture (format #f "cut -d';' -f1 ~a | sed 's|^|export |g'" pre-cache-file))
  sh-cache-file)

(write-file "w"
  (capture (format #f "cut -d';' -f1 ~a | sed 's|^|set -gx |g; s|=| |g'" pre-cache-file))
  fish-cache-file)

(write-file "w"
  (rm-newlines (capture (format #f "pgrep -u ~a -x dirmngr" (getlogin))))
  pid-file)

(delete-file pre-cache-file)
